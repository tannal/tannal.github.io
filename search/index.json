[{"content":" Chromium class BoxBorderPainter { private: // 边框属性标志 bool is_uniform_color_; bool is_uniform_style_; bool is_uniform_width_; bool has_transparency_; // 可见边的集合，可能是位掩码 unsigned visible_edge_set_; static const unsigned kAllBorderEdges = 0xF; // 推测值 // 边框的几何形状 RoundedRect outer_; // 外边框 RoundedRect inner_; // 内边框 // 绘制上下文 PaintContext context_; // 样式相关 const ComputedStyle\u0026amp; style_; ElementRole element_role_; BleedAvoidance bleed_avoidance_; }; Webkit Gecko ","date":"2024-10-30T14:23:11Z","permalink":"https://tannal.github.io/p/how-browser-paint-box-border/","title":"How browser paint box border"},{"content":"History Stephen Kleene introduced regular expressions in the 1950s. They are used in many text processing tasks, such as search, find, and replace. Regular expressions are widely used in programming languages, text editors, and command-line utilities.\nKen Thompson implemented the first regular expression engine in the QED text editor in the 1960s. Later, he improved the engine and integrated it into the Unix operating system. The engine was written in assembly language and used a backtracking algorithm.\nInterface A regular expression engine provides an interface for matching patterns in text. The engine takes a regular expression and a text string as input and returns the positions of the matches in the text. The engine can also replace the matches with a replacement string.\nImplementations ed - The original Unix text editor, which includes a regular expression engine. (Ken Thompson, 1971)\ngrep - A command-line utility for searching text files using regular expressions. (Ken Thompson, 1973)\nsed - A stream editor for filtering and transforming text using regular expressions. (Lee E. McMahon, 1974)\nawk - A programming language for processing text files using regular expressions. (Alfred Aho, Peter Weinberger, and Brian Kernighan, 1977)\nPerl - A programming language that includes a powerful regular expression engine. (Larry Wall, 1987)\nThompson NFA algorithm (most common) Ken Thompson introduced the Nondeterministic Finite Automaton (NFA) algorithm for regular expression matching. The algorithm uses a state machine to match patterns in text. The NFA algorithm is efficient and easy to implement.\nDFA algorithm (Aho-Corasick algorithm) The Deterministic Finite Automaton (DFA) algorithm is an alternative to the NFA algorithm. The DFA algorithm uses a deterministic state machine to match patterns in text. The DFA algorithm is more efficient than the NFA algorithm but harder to implement.\nBacktracking algorithm (Perl) The backtracking algorithm is a general algorithm for regular expression matching. The algorithm uses recursion to explore all possible matches in the text. The backtracking algorithm is simple to implement but can be slow for complex patterns.\nModern and popular implementations Golang - The standard library includes a regular expression package that implements the Thompson NFA algorithm.\nPython - The re module provides regular expression support using the Thompson NFA algorithm.\nJava - The java.util.regex package provides regular expression support using the DFA algorithm.\nV8 (JavaScript) - The V8 engine includes a regular expression engine that uses the Thompson NFA algorithm.\nSpidermonkey (JavaScript) - The Spidermonkey engine includes a regular expression engine that uses the Thompson NFA algorithm.\nJavaScriptCore (JavaScript) - The JavaScriptCore engine includes a regular expression engine that uses the Thompson NFA algorithm.\nICU (C/C++) - The International Components for Unicode library includes a regular expression engine that uses the DFA algorithm.\nRipgrep - A command-line utility for searching text files using regular expressions. (Andrew Gallant, 2016)\nRust - The regex crate provides regular expression support using the Thompson NFA algorithm.\nPCRE - The Perl Compatible Regular Expressions library provides regular expression support using the backtracking algorithm.\nRuby - The Onigmo library provides regular expression support using the backtracking algorithm.\nLLVM - The LLVM project includes a regular expression engine that uses the DFA algorithm.\nGCC - The GNU Compiler Collection includes a regular expression engine that uses the DFA algorithm.\n.NET - The System.Text.RegularExpressions namespace provides regular expression support using the DFA algorithm.\n","date":"2024-10-28T14:23:11Z","permalink":"https://tannal.github.io/p/all-you-need-to-know-about-regex-engine/","title":"All you need to know about regex engine"},{"content":"Some call stack #0 layout_2020::table::layout::TableLayout::compute_grid_min_max (self=0x7fff863616c0, layout_context=0x7ffe4ffec1d8, writing_mode=...) at components/layout_2020/table/layout.rs:739 #1 0x000055555b503ad0 in layout_2020::table::layout::TableLayout::layout (self=..., layout_context=0x7ffe4ffec1d8, positioning_context=0x7fff863625f8, containing_block_for_children=0x7fff86361968, containing_block_for_table=0x7ffe4ffe61c0) at components/layout_2020/table/layout.rs:1686 #2 0x000055555b4dbd58 in layout_2020::table::Table::layout (self=0x7ffe25835178, layout_context=0x7ffe4ffec1d8, positioning_context=0x7fff863625f8, containing_block_for_children=0x7fff86361968, containing_block_for_table=0x7ffe4ffe61c0) at components/layout_2020/table/layout.rs:2750 #3 0x000055555b553f31 in layout_2020::formatting_contexts::NonReplacedFormattingContext::layout (self=0x7ffe25835160, layout_context=0x7ffe4ffec1d8, positioning_context=0x7fff863625f8, containing_block_for_children=0x7fff86361968, containing_block=0x7ffe4ffe61c0) at components/layout_2020/formatting_contexts.rs:260 #4 0x000055555b552497 in layout_2020::formatting_contexts::NonReplacedFormattingContext::layout_in_flow_block_level (self=0x7ffe25835160, layout_context=0x7ffe4ffec1d8, positioning_context=0x7fff863625f8, containing_block=0x7ffe4ffe61c0, sequential_layout_state=...) at components/layout_2020/flow/mod.rs:987 #5 0x000055555b5fc59b in layout_2020::flow::{impl#5}::layout::{closure#2} (positioning_context=0x7fff863625f8) at components/layout_2020/flow/mod.rs:696 #6 0x000055555b67d4d0 in layout_2020::positioned::PositioningContext::layout_maybe_position_relative_fragment\u0026lt;layout_2020::flow::{impl#5}::layout::{closure_env#2}\u0026gt; (self=0x7fff863625f8, layout_context=0x7ffe4ffec1d8, containing_block=0x7ffe4ffe61c0, style=0x7ffe4f84c970, fragment_layout_fn=...) at components/layout_2020/positioned.rs:205 #7 0x000055555b635587 in layout_2020::flow::BlockLevelBox::layout (self=0x7ffe25835158, layout_context=0x7ffe4ffec1d8, positioning_context=0x7fff863625f8, containing_block=0x7ffe4ffe61c0, sequential_layout_state=..., collapsible_with_parent_start_margin=...) at components/layout_2020/flow/mod.rs:691 ","date":"2024-09-27T19:23:11Z","permalink":"https://tannal.github.io/p/css-table-in-servo/","title":"CSS Table in Servo"},{"content":"Zed editor Writeen in rust\n","date":"2024-09-27T19:23:11Z","permalink":"https://tannal.github.io/p/explore-the-aosp-project/","title":"Explore the AOSP Project"},{"content":"Build the AOSP Project The Android Open Source Project (AOSP) is an open-source software stack for mobile devices, and a corresponding open-source project led by Google. It is the base of the Android operating system. The AOSP code can be found at android.googlesource.com.\nInstall the required packages sudo apt-get install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip Initialize the repository PATH=~/bin:$PATH curl https://storage.googleapis.com/git-repo-downloads/repo \u0026gt; ~/bin/repo chmod a+x ~/bin/repo git config --global user.name \u0026#34;tannal\u0026#34; git config --global user.email \u0026#34;tannal2409@gmail.com\u0026#34; mkdir aosp repo init -u https://android.googlesource.com/platform/manifest repo sync source build/envsetup.sh Build the code lunch make -j 22 Android Cuttlefish Emulator The Android Cuttlefish Emulator is a virtual device that runs the Android operating system. It is used for testing and development purposes. The Android Cuttlefish Emulator can be found at github.com/google/android-cuttlefish\ngit clone https://github.com/google/android-cuttlefish.git cd android-cuttlefish tools/buildutils/build_packages.sh sudo apt install ./cuttlefish-base_*.deb ./cuttlefish-user_*.deb sudo usermod -aG kvm,cvdnetwork,render $USER sudo reboot cvd create cvd start --start_webrtc=true A rooted phone My XiaoMi8\nChrome use sqlite3 to store the data, the data is stored in the /data/data/com.android.chrome/databases/ directory. The data is stored in the form of a database file, which can be accessed using the sqlite3 command.\nE.G. We can search for browsing history using the following command:\nThe /data/data/\n","date":"2024-09-27T19:23:11Z","permalink":"https://tannal.github.io/p/explore-the-aosp-project/","title":"Explore the AOSP Project"},{"content":" Mozilla \u0026amp; Firefox Documentry Build You need to install rust to use cargo.\ncurl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh Setup git and get the codebase.\ncargo install --git https://github.com/glandium/git-cinnabar git cinnabar setup git clone hg::https://hg.mozilla.org/mozilla-unified gecko \u0026amp;\u0026amp; cd gecko git config fetch.prune true git cinnabar fetch --tags mv .git/hooks/fsmonitor-watchman.sample .git/hooks/query-watchman git config core.fsmonitor .git/hooks/query-watchman Then you can actually build it.\nMany projects use custom python scripts for building and testing.\nThe one that firefox codebase using is called mach.\n./mach bootstrap ./mach run The bootstrap process will ask you what target do you want to build?\nNormally you will choose the desktop firefox browser to build.\nIn practice, you can manually set the config into a file.\nFor example, build SpiderMonkey under the firefox codebase.\nMOZCONFIG=mozconfig.jsshell ./mach build # For jsshell mozconfig.jsshell ac_add_options --enable-application=js mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-@CONFIG_GUESS@-jsshell # For full browser # echo \u0026#34;ac_add_options --enable-application=browser\u0026#34; \u0026gt; mozconfig.browser How to add a new web platform test The web platform tests are located in the testing/web-platform/tests directory.\nTake the zoom animation discrete test as an example.\nCreate a testing/web-platform/tests/css/css-viewport/zoom/discrete-animation.html file.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;CSS Zoom: animation and transition tests\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;help\u0026#34; href=\u0026#34;https://drafts.csswg.org/css-transform-2/#propdef-zoom\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;/resources/testharness.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;/resources/testharnessreport.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;/css/support/interpolation-testcommon.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; test_no_interpolation({ property: \u0026#39;zoom\u0026#39;, from: \u0026#39;1\u0026#39;, to: \u0026#39;2\u0026#39;, }); \u0026lt;/script\u0026gt; Update the test manifest file by running the following command.\nThen you can run the test.\n./mach wpt-manifest-update ./mach wpt css/css-viewport/zoom/zoom-animation-discrete.html The WPT (Web Platform Tests) framework indeed provides many useful helper functions, especially when testing CSS properties and animations.\nIn addition to test_no_interpolation, there are several other commonly used helper functions. Here are some important examples:\ntest_interpolation: Tests if a property interpolates correctly. test_composition: Tests the combined effect of multiple animations or transitions. test_computed_value: Tests if the computed value matches the expected value. test_valid_value: Tests if a value is valid for a specific property. test_invalid_value: Tests if a value is invalid for a specific property. test_property_values: Tests a set of values for validity or invalidity. test_discrete_values: Tests the behavior of discrete values. test_addition: Tests addition operations, such as stacking transforms. test_multiplication: Tests multiplication operations, such as scaling. create_test_element: Creates an element for testing purposes. assert_equals_rounded: Compares approximately equal numerical values. Most of these functions are defined in various support files under the /css/support/ directory, such as interpolation-testcommon.js, computed-testcommon.js, and so on.\nUsing these helper functions can greatly simplify your test code, improve readability, and maintainability. They encapsulate many common testing patterns and complex setup processes, making it easier to write comprehensive and precise CSS tests.\nWhen writing WPT tests, it is recommended to first explore the relevant support files to understand the available helper functions. This helps avoid duplicating existing functionality and ensures that your tests align with the existing style and quality of tests.\nThere is another example of a test for input element vertical alignment.\nIt\u0026rsquo;s a little bit different because it has reference files.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Input type=range baseline alignment\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;match\u0026#34; href=\u0026#34;range-baseline-ref.html\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;help\u0026#34; href=\u0026#34;https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range)\u0026#34;\u0026gt; \u0026lt;style\u0026gt; .range-input { margin: 20px; padding: 10px; outline: 20px solid blue; visibility: hidden; } \u0026lt;/style\u0026gt; \u0026lt;div class=\u0026#34;text-wrapper\u0026#34;\u0026gt; Baseline text \u0026lt;input type=\u0026#34;range\u0026#34; class=\u0026#34;range-input\u0026#34;\u0026gt; More baseline text \u0026lt;/div\u0026gt; \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Reference for Input type=range baseline alignment\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; .range-placeholder { display: inline-block; margin-top: 20px; margin-left: 20px; margin-right: 20px; padding: 10px; outline: 20px solid transparent; width: 160px; height: 20px; } \u0026lt;/style\u0026gt; \u0026lt;div\u0026gt; Baseline text \u0026lt;span class=\u0026#34;range-placeholder\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; More baseline text \u0026lt;/div\u0026gt; Logging Debug() ","date":"2024-09-24T19:23:11Z","permalink":"https://tannal.github.io/p/the-hitchhikers-guide-to-firefox-contributor/","title":"The Hitchhiker's Guide to Firefox Contributor"},{"content":"The problem The RegExp object in SpiderMonkey does not support the v flag. The v flag is a new flag introduced in ECMAScript 2022. The v flag is used to match vertical whitespace characters. The vertical whitespace characters are the characters that are used to separate lines of text. The vertical whitespace characters include the following characters:\nThe tc39 proposal for the v flag can be found here\nThe proposal is made by Mathias Bynens who was a v8 engineer.\nSee their blog post here\nSummary of the v8 post The v flag is typically used to deal with unicode characters appearing in the RegExp.\nMatching Emoji characters is a good example of where the v flag is useful.\n// Unicode defines a character property named “Emoji”. const re = /^\\p{Emoji}$/u; // Match an emoji that consists of just 1 code point: re.test(\u0026#39;⚽\u0026#39;); // \u0026#39;\\u26BD\u0026#39; // → true ✅ // Match an emoji that consists of multiple code points: re.test(\u0026#39;👨🏾‍⚕️\u0026#39;); // \u0026#39;\\u{1F468}\\u{1F3FE}\\u200D\\u2695\\uFE0F\u0026#39; // → false ❌ const re = /^\\p{RGI_Emoji}$/v; // Match an emoji that consists of just 1 code point: re.test(\u0026#39;⚽\u0026#39;); // \u0026#39;\\u26BD\u0026#39; // → true ✅ // Match an emoji that consists of multiple code points: re.test(\u0026#39;👨🏾‍⚕️\u0026#39;); // \u0026#39;\\u{1F468}\\u{1F3FE}\\u200D\\u2695\\uFE0F\u0026#39; // → true ✅ The test I didn\u0026rsquo;t do this at first, but I should have written a test for this.\nThe v flag is not tested in the test262 testsuite.\nSo I wrote a test for this and contributed back to test262.\nThe Regex v flag The implementation in Spidermonkey The regex engine in spidermonkey is implemented using v8\u0026rsquo;s irregex engine.\nReference More on regex engine in spidermonkey.\nhttps://hacks.mozilla.org/2020/06/a-new-regexp-engine-in-spidermonkey/\n","date":"2024-09-21T19:23:11Z","permalink":"https://tannal.github.io/p/implement-the-v-flag-for-regexp-in-spidermonkey/","title":"Implement the v flag for RegExp in SpiderMonkey"},{"content":" How to teach CSS Start over-engineering your CSS Web Design Engineering Layout and Reading Order Utility First CSS Isn’t Inline Styles | Sarah Dayan Character Modeling in CSS | Julia Miocene Problems solved by OpenType | Roel Nieskens Standardization Stories | Elika Etemad The Garden and The Treadmill | Stephen Hay Debug() Tokenize\n","date":"2024-09-14T19:23:11Z","permalink":"https://tannal.github.io/p/css-day-2024/","title":"CSS Day 2024"},{"content":" UNIX Documentry GNU/Linux Documentry Mozilla/Firefox Documentry PyTorch Documentry The Story of Minecraft eBPF Documentry Kubernetes (k8s) Documentry Node.js Documentry Vue.js Documentry React Documentry TypeScript Documentry Kotlin Documentry ","date":"2024-09-14T19:23:11Z","permalink":"https://tannal.github.io/p/the-documentries/","title":"The Documentries"},{"content":" Nodejs Documentry Build First we need to generate ninja.build, the configure script will generate both release and debug build.\n./configure --ninja --debug --v8-with-dchecks -C --node-builtin-modules-path $(pwd) make -j The build process is quite slow beacuse we need to build v8 from source.\nccache might speed up build process especially in incremental rebuild.\nThen the build directory is out/Release and out/Debug.\nNode typically contains two parts of code, one is C++ code which abstract v8 and the host system, another part is js code which executed by v8.\nYou can run tests with tools/test.py\npython tools/test.py -p tap --logfile test.tap --mode=release --flaky-tests=keep_retrying -p actions --node-args=\u0026#39;--test-reporter=spec\u0026#39; --node-args=\u0026#39;--test-reporter-destination=stdout\u0026#39; --measure-flakiness 9 test/parallel/test-zlib-crc32.js You can lint your code (no auto fix) with make lint-cpp\nLogging Debug() ","date":"2024-09-14T19:23:11Z","permalink":"https://tannal.github.io/p/the-hitchhikers-guide-to-node-contributor/","title":"The Hitchhiker's Guide to Node Contributor"},{"content":" Music theory melody harmony rhythm Dataset Lakh MIDI Dataset 包含 17 万多个 MIDI 文件。 https://colinraffel.com/projects/lmd/#get\nMAESTRO Dataset 古典钢琴音乐数据集。 https://magenta.tensorflow.org/datasets/maestro\nFMA (Free Music Archive) 包含各种流派的音频文件。 https://freemusicarchive.org/search/?quicksearch=\u0026search-genre=Classical\nMusicNet 古典音乐数据集，带有乐器、音高等标注。 Million Song Dataset 大规模音乐元数据集。 RWC (Real World Computing) Music Database 包含流行音乐、古典音乐等多种类型。 NSynth Dataset 由 Google 发布的单音音色数据集。 MUSDB18 多轨音乐分离数据集。 Nottingham Database 民谣曲调数据集。 Bach Chorales Dataset 巴赫合唱曲数据集。 Tranditional Music Generation Rule-based Markov Chain Hidden Markov Model Neural Network Music Generation LSTM GRU Transformer VAE GAN RL Music assistant tools Related Work Magenta\nOpenAI Jukebox\nGoogle Magenta\nDeepJ\nAIVA\nAmper Music\nJukedeck\nFlow Machines\nMuseNet\nNSynth\nMusicVAE\nDDSP\nOnsets and Frames\nAppendix Mixed precision training Mixed precision training stochastic_rounding is a technique that can be used to improve the accuracy of the model when using mixed precision training. It is a rounding technique that rounds to the nearest even integer, which can help reduce the bias introduced by rounding errors.\nIt is used in Adamw optimizer and encoder in the transformer model.\nParameters update in the optimizer is done in FP32, while the model weights are stored in FP16. This can lead to a loss of precision in the model weights, which can affect the accuracy of the model. stochastic_rounding can help reduce this loss of precision by rounding the model weights to the nearest even integer.\n","date":"2024-09-14T19:23:11Z","permalink":"https://tannal.github.io/p/training-an-ai-for-melody-creating/","title":"Training an AI for melody creating"},{"content":" React Documentry The Creator of React is Jorden.\n开源 ","date":"2024-09-14T14:23:11Z","permalink":"https://tannal.github.io/p/react-documentry/","title":"React Documentry"},{"content":"History ","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/all-you-need-to-know-about-editor/","title":"All you need to know about editor"},{"content":"History Kernel-space allocator buddy allocator - A memory allocator that is used in many operating systems. (Per Brinch Hansen, 1970)\nslab allocator - A memory allocator that is used in the Linux kernel. (Jeff Bonwick, 1994)\njemalloc - A general-purpose memory allocator that is widely used in production systems. (Jason Evans, 2005)\ntcmalloc - A thread-caching memory allocator that is used in Google\u0026rsquo;s production systems. (Sanjay Ghemawat, 2004)\nUser-space allocator jemalloc - A general-purpose memory allocator that is widely used in production systems. (Jason Evans, 2005)\ntcmalloc - A thread-caching memory allocator that is used in Google\u0026rsquo;s production systems. (Sanjay Ghemawat, 2004)\nmalloc - The standard memory allocator in the C standard library. (Doug Lea, 1979)\ndlmalloc - A memory allocator that is used in many Unix systems. (Doug Lea, 2001)\n","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/all-you-need-to-know-about-memory-allocator/","title":"All you need to know about memory allocator"},{"content":"History Kernel-space networking TCP/IP - The Transmission Control Protocol/Internet Protocol is the foundation of the Internet. (Vint Cerf and Bob Kahn, 1974)\nUDP - The User Datagram Protocol is a simple, connectionless protocol that is used for real-time applications. (David P. Reed, 1980)\nIP - The Internet Protocol is the network layer protocol that is used to route packets on the Internet. (Vint Cerf and Bob Kahn, 1974)\nEthernet - The Ethernet protocol is the most widely used local area network protocol. (Robert Metcalfe and David Boggs, 1973)\nARP - The Address Resolution Protocol is used to map IP addresses to MAC addresses. (David C. Plummer, 1982)\nICMP - The Internet Control Message Protocol is used to send error messages and control messages on the Internet. (Jon Postel, 1981)\nDNS - The Domain Name System is used to translate domain names to IP addresses. (Paul Mockapetris, 1983)\nDHCP - The Dynamic Host Configuration Protocol is used to assign IP addresses to hosts on a network. (Ralph Droms, 1993)\nNAT - Network Address Translation is used to map private IP addresses to public IP addresses. (Masataka Ohta, 1994)\nBGP - The Border Gateway Protocol is used to route packets between autonomous systems on the Internet. (Yakov Rekhter and Kirk Lougheed, 1989)\nOSPF - The Open Shortest Path First protocol is used to route packets within an autonomous system. (John Moy, 1988)\nRIP - The Routing Information Protocol is a simple routing protocol that is used on small networks. (Charles Hedrick, 1988)\nIPsec - The Internet Protocol Security protocol is used to secure IP communications. (Steven Bellovin, John Ioannidis, and Aviel Rubin, 1994)\nSSL/TLS - The Secure Sockets Layer/Transport Layer Security protocol is used to secure web communications. (Netscape Communications, 1994)\nUser-space networking HTTP - The Hypertext Transfer Protocol is used to transfer web pages on the Internet. (Tim Berners-Lee, 1991)\nFTP - The File Transfer Protocol is used to transfer files on the Internet. (Abhay Bhushan, 1971)\nSMTP - The Simple Mail Transfer Protocol is used to send email on the Internet. (Jon Postel, 1982)\nPOP3 - The Post Office Protocol version 3 is used to retrieve email from a server. (Marshall Rose, 1988)\nIMAP - The Internet Message Access Protocol is used to retrieve email from a server. (Mark Crispin, 1986)\nTelnet - The Telnet protocol is used to access remote computers over a network. (Paul Mockapetris, 1983)\nSSH - The Secure Shell protocol is used to access remote computers securely. (Tatu Ylönen, 1995)\nSNMP - The Simple Network Management Protocol is used to manage network devices. (Marshall Rose, 1988)\nNTP - The Network Time Protocol is used to synchronize the clocks of computers on a network. (David L. Mills, 1985)\nDHCP - The Dynamic Host Configuration Protocol is used to assign IP addresses to hosts on a network. (Ralph Droms, 1993)\nDNS - The Domain Name System is used to translate domain names to IP addresses. (Paul Mockapetris, 1983)\nNAT - Network Address Translation is used to map private IP addresses to public IP addresses. (Masataka Ohta, 1994)\nBGP - The Border Gateway Protocol is used to route packets between autonomous systems on the Internet. (Yakov Rekhter and Kirk Lougheed, 1989)\nOSPF - The Open Shortest Path First protocol is used to route packets within an autonomous system. (John Moy, 1988)\nClient networking Web browser - A software application that is used to access web pages on the Internet. (Tim Berners-Lee, 1991)\nEmail client - A software application that is used to send and receive email on the Internet. (Jon Postel, 1982)\nFTP client - A software application that is used to transfer files on the Internet. (Abhay Bhushan, 1971)\nSSH client - A software application that is used to access remote computers securely. (Tatu Ylönen, 1995)\nTelnet client - A software application that is used to access remote computers over a network. (Paul Mockapetris, 1983)\nServer Networking Web server - A software application that is used to serve web pages on the Internet. (Tim Berners-Lee, 1991)\nEmail server - A software application that is used to send and receive email on the Internet. (Jon Postel, 1982)\nFTP server - A software application that is used to transfer files on the Internet. (Abhay Bhushan, 1971)\nSSH server - A software application that is used to access remote computers securely. (Tatu Ylönen, 1995)\nTelnet server - A software application that is used to access remote computers over a network. (Paul Mockapetris, 1983)\n","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/all-you-need-to-know-about-networking-and-internet-protocol/","title":"All you need to know about networking and internet protocol"},{"content":"History ","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/all-you-need-to-know-about-storage-system-and-dbms/","title":"All you need to know about storage system and DBMS"},{"content":" ;\n","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/ktv-in-9-11/","title":"KTV in 9-11"},{"content":" ;\n","date":"2024-09-13T14:23:11Z","permalink":"https://tannal.github.io/p/ktv-in-9-11/","title":"KTV in 9-11"},{"content":"Be concise and different We must teach ai which part should it keep the same with the data\nwhich part should it be flexiable and different with the data\nHuman can precive something exist that cann\u0026rsquo;t be uniform defined. I know it when I see it.\nPytorch版本的GPT2 GPT2 模型实现 Flash 注意力 混合精度 前向传播 反向传播 自动微分 梯度更新 内存管理 CUDA后端 单机多卡 多机多卡 LLama3 ","date":"2024-09-06T10:51:56+08:00","permalink":"https://tannal.github.io/p/the-phylosophy-of-ai/","title":"The phylosophy of AI"},{"content":"","date":"0001-01-01T00:00:00Z","permalink":"https://tannal.github.io/p/","title":""}]